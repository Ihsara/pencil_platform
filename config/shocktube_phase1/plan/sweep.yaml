# ===================================================================
# Plan for the Shocktube Phase 1 Parameter Sweep
# ===================================================================
# This file defines the entire experimental campaign. It is read by
# the main Python script to generate all necessary run configurations
# and submission scripts.
---

# --- HPC Execution Parameters ---
# Defines paths and settings for the High-Performance Computing environment (Mahti).
hpc:
  # The absolute path to the verified, working base simulation directory.
  # pc_newrun will use this as the source to create new runs.
  source_base_dir: '/scratch/project_2008296/chau/chausims/generated_sims_project_group/sod_10_test_proj/quick_test_sod'
  
  # The absolute path where all new experiment run directories will be created.
  run_base_dir: '/scratch/project_2008296/chau/runs/shocktube_phase1'

  module_loads: |
    module load gcc/11.2.0
    module load openmpi/4.1.2
    module load openblas/0.3.18-omp
    module load csc-tools
    module load StdEnv
    module load hdf5/1.10.7-mpi


  # SLURM SBATCH parameters for the array job submission script.
  sbatch:
    job_name: "shock_sweep_ph1"
    account: "project_2008296"
    partition: "small"         # Use 'small' for single-core, short jobs.
    time: "00:15:00"         # Format: HH:MM:SS. 15 minutes is ample for a test.
    nodes: 1
    ntasks: 1                # Request exactly one task.
    cpus_per_task: 1         # Request one CPU core for that task.
    mail_user: "chau.c.tran@aalto.fi"
    mail_type: "END"         # Options: BEGIN, END, FAIL, ALL

# --- Post-Processing Automation (Optional) ---
# Set to true to automatically run post-processing after job submission
# Note: These flags only provide reminders. Actual post-processing must be run manually after jobs complete.
auto_check: true              # If true, automatically check job status after submission
auto_postprocessing: true     # If true, display reminder to run --analyze and --viz after jobs complete

# --- Error Analysis Configuration ---
# Specifies which error metrics to calculate and visualize
# Available metrics: 'l1', 'l2', 'linf'
# All specified metrics will be combined in error evolution videos and frames
error_analysis:
  metrics: ['l1']  # List of metrics to calculate and visualize ['l1', 'l2', 'linf']
  combine_in_videos: true         # If true, show all metrics in the same frame/evolution

# --- Experiment Generation Parameters ---
base_experiment: 'shocktube_base'
output_prefix: 'res400_nohyper'

# Defines the naming scheme for Phase 1 runs.
run_name_template: "{{ output_prefix }}_{{ branch.name }}_nu{{ nu_shock | fs_safe }}_chi{{ chi_shock | fs_safe }}_diffrho{{ diffrho_shock | fs_safe }}"

# --- Global Modifications ---
modifications:
  run_in.yaml:
    viscosity_run_pars: { nu_hyper3: null }
    entropy_run_pars: { chi_hyper3: null }
    viscosity_run_pars_update: { ivisc: ['nu-shock'] }
    entropy_run_pars_update: { iheatcond: ['shock'] }

# --- Parameter Sweeps ---
parameter_sweeps:
  - type: linked
    variables: [nu_shock, chi_shock, diffrho_shock]
    values: [0.1, 0.5, 1.0, 5.0]

# --- Branches ---
branches:
  - name: "massfix_default_gamma"
    settings:
      run_in.yaml:
        density_run_pars: { lmassdiff_fix: true }
  - name: "massfix_gamma_is_1"
    settings:
      run_in.yaml:
        density_run_pars: { lmassdiff_fix: true, lgamma_is_1: true }
  - name: "nomassfix"
    settings:
      run_in.yaml:
        density_run_pars: { lmassdiff_fix: false }
